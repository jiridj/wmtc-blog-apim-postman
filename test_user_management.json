{
	"info": {
		"_postman_id": "deb57317-4821-47ec-bba2-f81b8ef3449d",
		"name": "Test User Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19018100"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Should return 200 OK', ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Should have a number as user ID', () => {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data.id).to.be.a('number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "{{user-id}}"
						},
						{
							"key": "username",
							"value": "{{user-name}}"
						},
						{
							"key": "firstName",
							"value": "{{first-name}}"
						},
						{
							"key": "lastName",
							"value": "{{last-name}}"
						},
						{
							"key": "email",
							"value": "{{first-name}}.{{last-name}}@mydomain.com"
						},
						{
							"key": "password",
							"value": "{{password}}"
						},
						{
							"key": "phone",
							"value": "{{phone}}"
						},
						{
							"key": "userStatus",
							"value": "1",
							"description": "User Status"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				},
				"description": "This can only be done by the logged in user."
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "10"
								},
								{
									"key": "username",
									"value": "theUser"
								},
								{
									"key": "firstName",
									"value": "John"
								},
								{
									"key": "lastName",
									"value": "James"
								},
								{
									"key": "email",
									"value": "john@email.com"
								},
								{
									"key": "password",
									"value": "12345"
								},
								{
									"key": "phone",
									"value": "12345"
								},
								{
									"key": "userStatus",
									"value": "1",
									"description": "User Status"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 10,\n  \"username\": \"theUser\",\n  \"firstName\": \"John\",\n  \"lastName\": \"James\",\n  \"email\": \"john@email.com\",\n  \"password\": \"12345\",\n  \"phone\": \"12345\",\n  \"userStatus\": 1\n}"
				}
			]
		},
		{
			"name": "Log user in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Should return 200 OK', ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/login?username={{user-name}}&password={{password}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "{{user-name}}",
							"description": "The user name for login"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"description": "The password for login in clear text"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username=aute mollit officia anim&password=aute mollit officia anim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "aute mollit officia anim"
								},
								{
									"key": "password",
									"value": "aute mollit officia anim"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Rate-Limit",
							"value": "-50980880",
							"description": "calls per hour allowed by the user"
						},
						{
							"key": "X-Expires-After",
							"value": "2016-02-28T14:50:03.391Z",
							"description": "date in UTC when token expires"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"aute mollit officia anim\""
				},
				{
					"name": "Invalid username/password supplied",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username=aute mollit officia anim&password=aute mollit officia anim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "aute mollit officia anim"
								},
								{
									"key": "password",
									"value": "aute mollit officia anim"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Log user out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Should return 200 OK', ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Should return 200 OK', ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/:username",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						":username"
					],
					"variable": [
						{
							"key": "username",
							"value": "{{user-name}}",
							"description": "(Required) The name that needs to be deleted"
						}
					]
				},
				"description": "This can only be done by the logged in user."
			},
			"response": [
				{
					"name": "Invalid username supplied",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aute mollit officia anim",
									"description": "(Required) The name that needs to be deleted"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "User not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aute mollit officia anim",
									"description": "(Required) The name that needs to be deleted"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user-id",
			"value": "{{$randomInt}}",
			"type": "string"
		},
		{
			"key": "user-name",
			"value": "{{$randomUserName}}",
			"type": "string"
		},
		{
			"key": "first-name",
			"value": "{{$randomFirstName}}",
			"type": "string"
		},
		{
			"key": "last-name",
			"value": "{{$randomLastName}}",
			"type": "string"
		},
		{
			"key": "email",
			"value": "{{firstName}}.{{lastName}}@softwareag.com",
			"type": "string"
		},
		{
			"key": "password",
			"value": "{{$randomUUID}}",
			"type": "string"
		},
		{
			"key": "phone",
			"value": "{{$randomPhoneNumber}}",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "https://petstore3.swagger.io/api/v3",
			"type": "string"
		}
	]
}